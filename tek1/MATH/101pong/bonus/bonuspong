#!/usr/bin/env python3

import pygame
import math
import random
import sys
from pygame import movie
from pygame.locals import *

pygame.init()
pygame.mixer.pre_init(44100,-16,2,2048)
pygame.mixer.init()

class Pong(object):
    speed = [-5, -4, -3, 3, 4, 5]
    coords = [0, 0]
    screen = pygame.display.set_mode((1200, 800))
    font = pygame.font.SysFont("arial", 50)
    paddle_right = pygame.image.load("img/paddle_right.png").convert_alpha()
    paddle_left = pygame.image.load("img/paddle_left.png").convert_alpha()
    ball = pygame.image.load("img/ball.png").convert_alpha()
    ball_pos = [600, 300]
    positions = {"paddle_r": 300, "paddle_l": 300}
    ball_speed = [random.choice(speed), random.choice(speed)]
    keys = [False, False, False, False]
    score_p1 = 0
    score_p2 = 0
    changes = 0
    window = 0
    time = -1
    disp_jordan = False
    animated_image = ["jordan0.gif", "jordan1.gif", "jordan2.gif", "jordan3.gif", "jordan4.gif", "jordan5.gif", "jordan6.gif", "jordan7.gif", "jordan8.gif", "jordan9.gif", "jordan10.gif", "jordan11.gif", "jordan12.gif", "jordan13.gif", "jordan14.gif", "jordan15.gif", "jordan16.gif", "jordan17.gif", "jordan18.gif", "jordan19.gif", "jordan20.gif", "jordan21.gif"]
    animate = pygame.image.load("img/jordan/"+ str(animated_image[0])).convert_alpha()

    def __init__(self):
        pygame.display.set_caption("Pong")
        self.screen.fill((0,0,0))
        self.paddle_right = pygame.transform.rotate(self.paddle_right, 90)
        self.paddle_left = pygame.transform.rotate(self.paddle_left, 90)
        self.window = 1
        pygame.mixer.music.load("img/castle rock.mp3")

    def main_window(self):
        clock = pygame.time.Clock()
        index = 0
        while True:
            clock.tick(60)
            self.screen.fill((0, 0, 0))
            if self.window == 0:
                for event in pygame.event.get():
                    if event.type == QUIT:
                        sys.exit()
                    if event.type == KEYDOWN:
                        if event.key == K_z:
                            self.keys[0] = True
                        if event.key == K_s:
                            self.keys[1] = True
                        if event.key == K_UP:
                            self.keys[2] = True
                        if event.key == K_DOWN:
                            self.keys[3] = True
                    if event.type == KEYUP:
                        if event.key == K_z:
                            self.keys[0] = False
                        if event.key == K_s:
                            self.keys[1] = False
                        if event.key == K_UP:
                            self.keys[2] = False
                        if event.key == K_DOWN:
                            self.keys[3] = False
                if self.keys[0]:
                    self.positions["paddle_l"] = self.positions.get("paddle_l") - 10
                if self.keys[1]:
                    self.positions["paddle_l"] = self.positions.get("paddle_l") + 10
                if self.keys[2]:
                    self.positions["paddle_r"] = self.positions.get("paddle_r") - 10
                if self.keys[3]:
                    self.positions["paddle_r"] = self.positions.get("paddle_r") + 10
                if self.positions.get("paddle_l") > 672:
                    self.positions["paddle_l"] = 672
                if self.positions.get("paddle_l") < 0:
                    self.positions["paddle_l"] = 0
                if self.positions.get("paddle_r") > 672:
                    self.positions["paddle_r"] = 672
                if self.positions.get("paddle_r") < 0:
                    self.positions["paddle_r"] = 0

                if self.disp_jordan:
                    if index == 21:
                        index = 0
                    self.animate = pygame.image.load("img/jordan/"+str(self.animated_image[index]))
                    if self.time % 3 == 0:
                        index += 1
                self.update_ball()
                self.display_image()

            if self.window == 1:
                for event in pygame.event.get():
                    if event.type == QUIT:
                        sys.exit()
                    if event.type == MOUSEBUTTONDOWN or event.type == KEYDOWN:
                        self.ball_pos = [600, 300]
                        self.positions = {"paddle_r": 300, "paddle_l": 300}
                        pygame.mixer.music.play(loops=-1)
                        self.window = 0
                self.display_menu()

            pygame.display.flip()

    def update_ball(self):
        if self.ball_pos[1] < 0 or self.ball_pos[1] > 746:
            self.ball_speed[1] *= -1
        if self.ball_pos[0] < 0:
            if self.changes == 0:
                self.disp_jordan = True
            self.score_p2 += 1
            self.ball_pos = [600, 300]
            self.ball_speed = [random.choice(self.speed), random.choice(self.speed)]
            self.time = 120
            self.changes = 0
        if self.ball_pos[0] > 1140:
            if self.changes == 0:
                self.disp_jordan = True
            self.score_p1 += 1
            self.ball_pos = [600, 300]
            self.ball_speed = [random.choice(self.speed), random.choice(self.speed)]
            self.time = 120
            self.changes = 0
        if self.ball_pos[0] <= 32:
            pos_paddle = [self.positions.get("paddle_l") - 50, self.positions.get("paddle_l") + 130]
            if self.ball_pos[1] >= pos_paddle[0] and self.ball_pos[1] <= pos_paddle[1]:
                self.ball_speed[0] *= -1
                self.ball_pos[0] = 33
                self.changes += 1
            if self.ball_pos[1] == pos_paddle[0]:
                self.ball_speed[0] *= -1
                if self.ball_speed[1] > 0:
                    self.ball_speed[1] += random.randint(1, 3)
                    self.ball_speed[1] *= -1
                if self.ball_speed[1] < 0:
                    self.ball_speed[1] -= random.randint(1, 3)
                self.ball_pos[0] = 33
                self.changes += 1
            if self.ball_pos[1] == pos_paddle[1]:
                self.ball_speed[0] *= -1
                if self.ball_speed[1] > 0:
                    self.ball_speed[1] += random.randint(1, 3)
                if self.ball_speed[1] < 0:
                    self.ball_speed[1] -= random.randint(1, 3)
                    self.ball_speed[1] *= -1
                self.ball_pos[0] = 33
                self.changes += 1
        if self.ball_pos[0] >= 1110:
            pos_paddle = [self.positions.get("paddle_r") - 50, self.positions.get("paddle_r") + 130]
            if self.ball_pos[1] > pos_paddle[0] and self.ball_pos[1] < pos_paddle[1]:
                self.ball_speed[0] *= -1
                self.ball_pos[0] = 1109
                self.changes += 1
            if self.ball_pos[1] == pos_paddle[0]:
                self.ball_speed[0] *= -1
                if self.ball_speed[1] > 0:
                    self.ball_speed[1] += random.randint(1, 3)
                    self.ball_speed[1] *= -1
                if self.ball_speed[1] < 0:
                    self.ball_speed[1] -= random.randint(1, 3)
                self.ball_pos[0] = 1109
                self.changes += 1
            if self.ball_pos[1] == pos_paddle[1]:
                self.ball_speed[0] *= -1
                if self.ball_speed[1] > 0:
                    self.ball_speed[1] += random.randint(1, 3)
                if self.ball_speed[1] < 0:
                    self.ball_speed[1] -= random.randint(1, 3)
                    self.ball_speed[1] *= -1
                self.ball_pos[0] = 1109
                self.changes += 1
        self.ball_pos[0] += self.ball_speed[0]
        self.ball_pos[1] += self.ball_speed[1]
        self.change_speed()

    def change_speed(self):
        if random.randint(0, 100) == 1:
            if self.ball_speed[0] > 0:
                self.ball_speed[0] += 1
            if self.ball_speed[0] < 0:
                self.ball_speed[0] += -1

    def display_image(self):
        if self.time > 0:
            score_text = str(self.score_p1) + " - " + str(self.score_p2)
            score_label = self.font.render(score_text, 1, (255,255,255))
            self.time -= 1
            self.screen.blit(score_label, (550, 300))
            if self.disp_jordan:
                self.screen.blit(self.animate, (400, 0))
        if self.time == 0:
            if self.score_p1 == 3 or self.score_p2 == 3:
                self.score_p1 = 0
                self.score_p2 = 0
                self.window = 1
                pygame.mixer.music.stop()
                self.disp_jordan = False
            else:
                self.disp_jordan = False
                self.time = -1
        self.screen.blit(self.paddle_right, (1170, self.positions.get("paddle_r")))
        self.screen.blit(self.paddle_left, (0, self.positions.get("paddle_l")))
        if self.score_p1 < 3 and self.score_p2 < 3:
            self.screen.blit(self.ball, (self.ball_pos[0], self.ball_pos[1]))

    def display_menu(self):
        play_text = "Play"
        play_label = self.font.render(play_text, 1, (255,255,255))
        self.screen.blit(play_label, (550, 350))

Pong().main_window()